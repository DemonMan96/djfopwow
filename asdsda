local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local tweenService = game:GetService("TweenService")

-- Blacklist & Bug sistemi
local blacklisted = {}
local bugCount = 0
local escapePoint = CFrame.new(21.29, 137.60, 466.10)

-- === Yardımcı Fonksiyonlar ===

local function isBlacklisted(kasa)
	return blacklisted[kasa] and tick() - blacklisted[kasa] < 60
end

local function goEscape()
	print("Çok fazla buglu kasa bulundu, EscapePoint'e gidiliyor...")
	local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear)
	local goal = {CFrame = escapePoint}
	local tween = tweenService:Create(hrp, tweenInfo, goal)
	tween:Play()
	tween.Completed:Wait()
	task.wait(10) -- bekleme süresi
	bugCount = 0 -- resetle
end

local function tweenTo(target)
	if not target then return end
	local tweenInfo = TweenInfo.new(3, Enum.EasingStyle.Linear)
	local goal = {CFrame = target.CFrame + Vector3.new(0, 5, 0)}
	local tween = tweenService:Create(hrp, tweenInfo, goal)
	tween:Play()
	tween.Completed:Wait()
end


-- Kasa soyma denemesi
local function tryRob(kasa)
	if not kasa or not kasa:IsA("Model") then return end
	if isBlacklisted(kasa) then return end

	local part = kasa:FindFirstChild("Part")
	if part and part:IsA("BasePart") and part.Color == Color3.fromRGB(255,0,0) then
		-- Kırmızı kasa, direkt geç
		return
	end

	local start = tick()
	local success = false

	tweenTo(kasa:FindFirstChildWhichIsA("BasePart"))

	-- 6 saniye deneme süresi
	while tick() - start < 6 do
		local p = kasa:FindFirstChild("Part")
		if p and p:IsA("BasePart") and p.Color ~= Color3.fromRGB(255,0,0) then
			success = true
			break
		end
		task.wait()
	end

	if not success then
		print("Buglu kasa atlandı:", kasa.Name)
		blacklisted[kasa] = tick()
		bugCount += 1
		if bugCount >= 3 then
			goEscape()
		end
	end
end

-- === ANA LOOP ===
while task.wait(1) do
	-- Önce paraları topla


	-- Sonra kasaları dene
	for _, kasa in pairs(workspace:GetDescendants()) do
		if kasa:IsA("Model") and kasa:FindFirstChild("Part") then
			tryRob(kasa)
		end
	end
task.wait(3)
end
